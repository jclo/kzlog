/*! ****************************************************************************
 * KZlog v0.0.6
 *
 * A minimal lightweight logging library for JavaScript.
 * (you can download it from npm or github repositories)
 * Copyright (c) 2020 Mobilabs <contact@mobilabs.fr> (http://www.mobilabs.fr).
 * Released under the MIT license. You may obtain a copy of the License
 * at: http://www.opensource.org/licenses/mit-license.php).
 * Built from ES6lib v0.0.12.
 * ************************************************************************** */
!function(e,t){"use strict";"function"==typeof define&&define.amd?define([""],t):"object"==typeof exports?(module.exports=t(e),null===e.KZlog&&(e.KZlog=t(e))):e.KZlog=t(e)}(this,e=>{"use strict";let t,n={};return function(){const i=e.KZlog;let r;t=function(e,t,n){const i=Object.create(r);return i.name=e||"unknown!",i.level=t||"trace",i.highlight=!1!==n,i},t.VERSION="0.0.6",t.noConflict=function(){return e.KZlog=i,this},r={help(){const e=["","Prints a log message formatted as: [year-month-day] [level] name message,","Methods:","  help(): print this message,","  version(): return the version number,","  setName(name): set the name","  setLevel(level): set the level","  setHighlight()highlight: set the highlight mode","  trace(msg): print the trace message,","  debug(msg): print the debug message,","  info(msg): print the info message,","  warn(msg): print the warn message,","  error(msg): print the error message,","  fatal(msg): print the fatal message,",""].join("\n");console.log(e)},version:()=>"0.0.6",setName(e){return this.name=e||"unknown!",this},setLevel(e){return this.level=e||"trace",this},setHighlight(e){return this.highlight=!1!==e,this},trace(e){return n.print(this,e,"trace"),this},debug(e){return n.print(this,e,"debug"),this},info(e){return n.print(this,e,"info"),this},warn(e){return n.print(this,e,"warn"),this},error(e){return n.print(this,e,"error"),this},fatal(e){return n.print(this,e,"fatal"),this}}}(),function(){const e=["trace","debug","info","warn","error","fatal","off"];n={print(t,n,i){const r=e,s=[32,36,34,33,35,31,0],o=new Date;let h,l=`[${o.getFullYear()}-${o.getMonth()+1}-${o.getDate()}  `;if(l+=`${o.getHours()}:${o.getMinutes()}:${o.getSeconds()}:${o.getMilliseconds()}`,l+="]",t.level||(t.level="trace"),void 0===t.highlight&&(t.highlight=!0),r.indexOf(i)>=r.indexOf(t.level)){if(!0===t.highlight){h=`${l} [${`[1;${s[r.indexOf(i)]}m`}${i}${"[0m"}] `,h+=`${t.name}: ${n}`}else h=`${l} [${i}] ${t.name}: ${n}`;console.log(h),"object"==typeof n&&console.log(n)}}}}(),t});